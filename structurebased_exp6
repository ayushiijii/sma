import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt

# Load CSV file
df = pd.read_csv("edgelist.csv")  # Ensure it's in the correct path

# Create a graph
G = nx.Graph()

# Convert DataFrame rows to tuples (source, target, weight)
edges = list(df.itertuples(index=False, name=None))

# Add edges with weights
G.add_weighted_edges_from(edges)

# Display basic graph info
print(f"Number of nodes: {len(G.nodes())}")
print(f"Number of edges: {len(G.edges())}")

# Draw the graph
plt.figure(figsize=(8, 6))
nx.draw(G, with_labels=True, node_color='lightblue', edge_color='gray', 
        node_size=2000, font_size=10, font_weight='bold')
plt.title("Social Media Network Graph")
plt.show()

# Compute centrality measures
degree_centrality = nx.degree_centrality(G)
print("\nDegree Centrality:")
for node, value in degree_centrality.items():
    print(f"{node}: {value}")

eigenvector_centrality = nx.eigenvector_centrality(G)
print("\nEigenvector Centrality:")
for node, value in eigenvector_centrality.items():
    print(f"{node}: {value}")

betweenness_centrality = nx.betweenness_centrality(G) 
print("\nBetweenness Centrality:") 
for node, value in betweenness_centrality.items(): 
    print(f"{node}: {value}") 


Source,Target,Relationship,Weight
1,2,Friends,1
1,3,Colleagues,1
2,4,Friends,1
3,5,Works With,1
4,6,Friends,1
5,7,Works At,1
6,8,Works At,1
7,9,Partners,1
8,10,Competitor,1
9,10,Competitor,1
11,12,Friends,1
12,13,Friends,1
13,14,Colleagues,1
14,15,Friends,1
15,1,Knows,1
